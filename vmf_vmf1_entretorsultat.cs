////////////////////////////////////////////////////////////////////////
//
// vmf/vmf1_entretorsultat.cs
//
// This file was generated by MapForce 2023r2.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;
using Altova.Db;
using Altova.TextParser;


using Fichier_texte; // application.libraries
using propal; // application.libraries
namespace vmf
{

	public class vmf1_entretorsultat : Altova.TraceProvider
	{


		class Main : IEnumerable
		{
			private readonly string var1_entr_e;

			public Main(
				string var1_entr_e
			)
			{
				this.var1_entr_e = var1_entr_e;
			}

			public IEnumerator GetEnumerator() { return Altova.Mapforce.MFEmptySequence.Instance.GetEnumerator(); }
		}


		public static IEnumerable Create(
			string var1_entr_e
		)
		{
			object o = hash[var1_entr_e];
			if (o != null)
				return new Altova.Mapforce.MFSingletonSequence(o);
			else
				return new Altova.Mapforce.MFSingletonSequence("0");
		}

		private static readonly Hashtable hash = new Hashtable();
		static vmf1_entretorsultat()
		{
			hash["4"] = "50";
			hash["5"] = "99";
		}

		public static string Eval(
			string var1_entr_e
		)
		{

			IEnumerator e = Create(var1_entr_e).GetEnumerator();
			if (e.MoveNext())
			{
				string result = (string)e.Current;
				Altova.Mapforce.MFEnumerator.Dispose(e);
				return result;
			}
			Altova.Mapforce.MFEnumerator.Dispose(e);
			throw new Exception("Expected a function result.");		
		}

	}
}
